import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load historical Bitcoin price data
data = pd.read_csv('btcNewsToPrice.csv')

# Extracting relevant features (e.g., closing price) and target variable (next day's closing price)
X = data['low'].values[:-1].reshape(-1, 1)  # Use closing prices as the feature
y = data['price'].values[1:]  # Next day's closing price as the target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)

# Initialize linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error (MSE)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Plot actual vs predicted prices
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, y_pred, color='red')
plt.title('Bitcoin Price Prediction')
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.show()